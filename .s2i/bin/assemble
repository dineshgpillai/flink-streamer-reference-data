#!/bin/bash
set -eo pipefail

S2I_SCRIPT_DIR="/usr/local/s2i"
S2I_SOURCE_DIR="/tmp/src"

#cp -R ${S2I_SOURCE_DIR} /opt/app-root

#cd /opt/app-root/src

#build and package deployment
#mvn -Dmaven.test.failure.ignore verify package -Psurefire

#dockerise the flink job container
#flink-streamer-legal/build.sh --from-archive /tmp/flink-1.7.2-bin-scala_2.11.tgz --job-jar flink-streamer-legal/target/flink-streamer-legal-*.jar --image-name dineshpillai/flink-streamer-legal:1.0.0

#!/bin/bash

function check_run {

  if [ -f $S2I_SOURCE_DIR/$MODULE_DIR/.s2i/bin/run ]; then

       echo "Custom run script found. Using this instead of the default."

       mkdir -p /deployments/scripts/$MODULE_DIR/

       cp $S2I_SOURCE_DIR/$MODULE_DIR/.s2i/bin/run /deployments/scripts/$MODULE_DIR/

   else

       echo "Using default run script"
  fi
}


function check_assemble {

  if [ -f $S2I_SOURCE_DIR/$MODULE_DIR/.s2i/bin/assemble ]; then

       echo "Custom assemble script found. Using this instead of the default."
       $S2I_SOURCE_DIR/$MODULE_DIR/.s2i/bin/assemble

   else

	default_assemble
  fi
}

function default_assemble {

  echo "Using default assemble script"
  mvn -Dmaven.test.failure.ignore verify package -Psurefire

}

echo "Checking for module-specific S2I scripts..."

if [ x"$MODULE_DIR" != "x" ]; then

  check_run
  check_assemble

else

  default_assemble

fi
